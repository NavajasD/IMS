@page "/productreport"

@inject ISearchProductTransactionsUseCase SearchProductTransactionsUseCase;
@inject IJSRuntime JSRuntime;

<h3>Product Transactions</h3>

<br />

<div id="print-area">

<div class="row">
    <div class="col">
        <label for="prod">Product Name</label>
        <input type="text" id="prod" class="form-control" @bind-value="productName" />
    </div>
    <div class="col">
        <label for="df">From Date</label>
        <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
    </div>
    <div class="col">
        <label for="dt">To Date</label>
        <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
    </div>
    <div class="col">
        <label for="at">Activity Type</label>
        <select id="at" class="form-control" @bind="activityTypeId">
            <option value="0"></option>
            <option value="1">Purchase Product</option>
            <option value="2">Produce Product</option>
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="SearchProducts">Search</button>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
    </div>
</div>

<br />

    @if (productTransactions != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Inventory</th>
                    <th>Activity</th>
                    <th>Qty. Before</th>
                    <th>Qty. After</th>
                    <th>Unit Price</th>
                    <th>PO No.</th>
                    <th>Production No.</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var prodTransaction in productTransactions)
                {
                        <tr>
                            <td>@prodTransaction.TransactionDate.ToString("dd/MM/yyyy")</td>
                            <td>@prodTransaction.Product.ProductName</td>
                            <td>
                            @switch (prodTransaction.ActivityType)
                            {
                                case ProductTransactionType.ProduceProduct:
                                    <text>Purchase Product</text>
                                    break;
                                case ProductTransactionType.SellProduct:
                                    <text>Sell Product</text>
                                    break;
                            }
                            </td>
                            <td>@prodTransaction.QuantityBefore</td>
                            <td>@prodTransaction.QuantityAfter</td>
                            <td>@prodTransaction.UnitPrice?.ToString("c")</td>
                            <td>@prodTransaction.SoNumber</td>
                            <td>@prodTransaction.ProductionNumber</td>
                        </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    private string productName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<ProductTransaction>? productTransactions;

    private async Task SearchProducts()
    {
        ProductTransactionType? productTransactionType = null;
        if (activityTypeId != 0)
            productTransactionType = (ProductTransactionType)activityTypeId;
        productTransactions = await SearchProductTransactionsUseCase.ExecuteAsync(productName, dateFrom, dateTo, productTransactionType);
    }

    private async Task PrintReport()
    {
        await JSRuntime.InvokeVoidAsync("print");
    }
}
