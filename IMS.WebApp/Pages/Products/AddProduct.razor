@page "/addproduct"

@inject NavigationManager NavigationManager;
@inject IAddProductUseCase AddProductUseCase;

<h3>Add Product</h3>

<br/>

<EditForm Model="product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText
            id="name"
            class="form-control"
            @bind-Value = "product.ProductName">
        </InputText>
    </div>
    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                   class="form-control"
                   @bind-Value="product.Quantity">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price"
                     class="form-control"
                     @bind-Value="product.Price">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="inventories">Inventories</label>
        <ProductInventoriesComponent Product="product"/>
    </div>
    <br/>
    <button
        type="submit"
        class="btn btn-primary">
        Save</button>
    <button
        type="button"
        class="btn btn-primary"
        @onclick="Cancel">
        Cancel</button>


</EditForm>

@code {
    private Product product = new Product();

    private async Task SaveProduct()
    {
        await AddProductUseCase.ExecuteAsync(product);
        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }

}
