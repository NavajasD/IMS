@page "/addinventory"

@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager

<h3>Add Inventory</h3>

<br/>

<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText
            id="name"
            class="form-control"
            @bind-Value = "inventory.InventoryName">
        </InputText>
    </div>
    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity"
                   class="form-control"
                   @bind-Value="inventory.Quantity">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price"
                     class="form-control"
                     @bind-Value="inventory.Price">
        </InputNumber>
    </div>
    <br/>
    <button
        type="submit"
        class="btn btn-primary">
        Save</button>
    <button
        type="button"
        class="btn btn-primary"
        @onclick="Cancel">
        Cancel</button>
</EditForm>
@code {
    private Inventory inventory = new Inventory();

    private async Task SaveInventory()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
